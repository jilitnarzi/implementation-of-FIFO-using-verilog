`timescale 1ns / 1ps

////////////////////////////////////////////////////////////////////////////////

//
// Create Date:   14:52:25 08/21/2024
// Design Name:   FIFO
// Module Name:   /home/ise/Desktop/verilog_prog/FIFO_tb.v
// Project Name:  testbench for FIFO
// Target Device:  
// Tool versions:  
// Description: 
//
// Verilog Test Fixture created by ISE for module: FIFO
//
// Dependencies:
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
////////////////////////////////////////////////////////////////////////////////

module FIFO_tb;

	// Inputs
	reg clk;
	reg reset;
	reg wr_en;
	reg rd_en;
	reg [7:0] din;

	// Outputs
	wire [7:0] dout;
	wire full;
	wire empty;

	// Instantiate the Unit Under Test (UUT)
	FIFO uut (
		.clk(clk), 
		.reset(reset), 
		.wr_en(wr_en), 
		.rd_en(rd_en), 
		.din(din), 
		.dout(dout), 
		.full(full), 
		.empty(empty)
	);
	initial 
		begin 
			clk = 0;
		end
	
	task rst;
		begin 
		reset = 1;
		#20 reset = 0; //#20ns delay
		end
	endtask
	
	always #5 clk = ~clk;
	
	task write_initial;
		begin
		wr_en=0;
		rd_en=0;
		din = 0;
		end
	endtask
	
	task write;
		input [7:0] wdata;
		begin
		@(posedge clk)
		begin 
			 wr_en = 1;
			 din= wdata;
		end
		end
	endtask
	
	task write16;
		begin
			write(8'hff);
			write(8'hfe);
			write(8'hfd);
			write(8'hfc);
			write(8'hfb);
			write(8'hfa);
			write(8'hf9);
			write(8'hf8);
			write(8'hf7);
			write(8'hf6);
			write(8'hf5);
			write(8'hf4);
			write(8'hf3);
			write(8'hf2);
			write(8'hf1);
			write(8'hf0);
			write(8'h11);
			
		end
	endtask
	
	task endwrite;
		wr_en = 0;
	endtask
	
	
	//read process
	
	task read ;
		begin 
			@(posedge clk)
				rd_en = 1;
		end
	endtask
	
	task read16;
		begin 
			read;read;read;read;
			read;read;read;read;
			read;read;read;read;
			read;read;read;read;
		end
	endtask
	
	task endread;
	begin
		@(posedge clk)
			rd_en =0;
	end
	endtask
	
	initial begin
		rst;
		write16;
		endwrite;
		
		#2
		read16;
		#10
		endread;
		#10
		$stop ;
		 //stop the simulation
	  end   
endmodule

